---
import { getLiveStory, useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import Layout from "../layouts/Layout.astro";
import { locales, defaultLocale } from "../i18n/config";

import { parseUrl, generateStaticPaths } from "../utils/storyblok";
import isPreview from "../utils/isPreview";

const storyblokApi = useStoryblokApi();

export async function getStaticPaths() {
    return await generateStaticPaths();
}

const params = Astro.params;

let props = isPreview()
    ? parseUrl(params?.slug, Astro.currentLocale)
    : Astro.props;

const { language, fullSlug } = props;

let story = null;
const liveStory = await getLiveStory(Astro);

if (liveStory) {
    story = liveStory;
} else {
    const { data } = await storyblokApi.get(`cdn/stories/${fullSlug}`, {
        version: "draft",
        resolve_relations: [
            "case_study.other_cases",
            "work.featured_cases",
            "work.archived_cases",
            "united.cases",
            "shop.shop_items",
            "shop_item.other_items",
        ],
    });

    story = data.story;
}

const alternates = story.alternates;

const headerLogoless = story.content.component === "home";
const whiteHeaderComponents = ["work", "contact", "united", "error"];
const headerWhite = whiteHeaderComponents.includes(story.content.component);

const bannerThemeComponents = {
    work: {
        txt: "#F8F7EC",
        bg: "#2D5A36",
    },
    united: {
        txt: "#f8f7ec",
        bg: "#181817",
    },
    shop: {
        txt: "#F8F7EC",
        bg: "#E56138",
    },
    shop_item: {
        txt: "#F8F7EC",
        bg: "#E56138",
    },
};
const bannerThemeComponentKey = story?.content
    ?.component as keyof typeof bannerThemeComponents;
const bannerTheme = bannerThemeComponents[bannerThemeComponentKey] || {
    bg: "#edd4f8",
    txt: "#181817",
};

const seo = story.content.seo?.[0] || {};
---

<Layout
    language={language}
    alternates={alternates}
    headerLogoless={headerLogoless}
    headerWhite={headerWhite}
    bannerTheme={bannerTheme}
    seo={seo}
>
    <StoryblokComponent language={language} blok={story.content} />
</Layout>
