---
import Title from "../../components/atoms/Title.astro";

import Section from "../../components/contact/Section.astro";
import Form from "../../components/contact/Form.astro";
import Jobs from "../../components/contact/Jobs.astro";
import Offices from "../../components/contact/Offices.astro";

const { language, blok } = Astro.props;
---

<div id="page-contact" class="contact bg-black text-white">
    <div class="container-main pt-150 pb-70 overflow-hidden lg:pt-135 lg:pb-125">
        <div class="flex flex-col items-center">
            <span
                class="text-tag-big mb-24 flex items-center justify-center rounded-[5rem] border-3 px-16 py-12 lg:mb-65 lg:px-24 lg:py-13"
            >
                {blok.subtitle}
            </span>
            <h1 class="text-title-1 px-gutter w-10/12 text-center">
                <Title title={blok.title[0]} />
            </h1>
            <div class="flex flex-col items-center md:gap-8">
                <Section>
                    <Form blok={blok} />
                </Section>
                <Section className="rotate-[1deg]">
                    <Jobs blok={blok} />
                </Section>
                <Section className="-rotate-[1.2deg]">
                    <Offices blok={blok} />
                </Section>
            </div>
        </div>
    </div>
</div>

<script>
    let tlAppear: gsap.core.Timeline;
    const init = () => {
        const page = document.querySelector("#page-contact");
        if (!page) return;

        const banner = document.querySelector("#layout-banner");
        const header = document.querySelector("#layout-header");

        gsap.timeline()
            .set(banner, {
                y: "-100%",
            })
            .set(header, {
                y: -50,
                opacity: 0,
            });

        tlAppear = gsap
            .timeline()
            .to(
                banner,
                {
                    y: 0,
                    duration: 0.6,
                    ease: "expo.out",
                },
                "start",
            )
            .to(
                header,
                {
                    y: 0,
                    opacity: 1,
                    duration: 0.6,
                    ease: "expo.out",
                },
                "start",
            );
    };

    const cleanup = () => {
        tlAppear?.kill();
    };

    document.addEventListener("storyblok-live-preview-updated", () => {
        cleanup();
        init();
    });

    document.addEventListener("astro:page-load", () => {
        init();
    });
    document.addEventListener("astro:before-swap", () => {
        cleanup();
    });
</script>
