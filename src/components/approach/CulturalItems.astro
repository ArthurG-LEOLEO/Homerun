---
import type { SbBlokData } from "@storyblok/astro";

const { items } = Astro.props;
---

<div
    id="cultural-items"
    class="mb-140 flex w-full flex-col text-black lg:mb-80 lg:w-5/6"
>
    {
        items.map((item: SbBlokData, index: number) => (
            <div class="cultural-item">
                <div
                    class:list={[
                        "cultural-item-inner flex w-full gap-16 py-24 pr-24 pl-16 md:gap-40 md:py-40 md:pr-40 md:pl-32",
                        {
                            "items-start bg-white": !item.highlight,
                            "items-center bg-black text-white": item.highlight,
                        },
                    ]}
                >
                    <span class="flex size-40 shrink-0 items-center justify-center rounded-full border-2 text-[1.6rem]/[4rem] font-black md:size-56 md:border-3 md:text-[2rem]/[5.6rem]">
                        {String(index + 1).padStart(2, "0")}
                    </span>
                    <div class="flex flex-col">
                        <span class="text-title-4">{item.title}</span>
                        {item.text && (
                            <span class="text-p-20 mt-8 md:mt-16">
                                {item.text}
                            </span>
                        )}
                    </div>
                </div>
            </div>
        ))
    }
</div>

<script>
    let items: NodeListOf<HTMLElement> | null;
    let tls: gsap.core.Timeline[] = [];

    const init = () => {
        const container = document.querySelector("#cultural-items");
        if (!container) return;

        items = container.querySelectorAll("#cultural-items .cultural-item");

        items?.forEach((i, index) => {
            const inverse = index % 2 !== 0 ? 1 : -1;
            const rotateOffset = 5;
            const inner = i.querySelector(".cultural-item-inner");
            const tl = gsap.timeline({
                scrollTrigger: {
                    trigger: i,
                    start: "top 90%",
                    end: "bottom top",
                    scrub: true,
                },
            });
            tl.fromTo(
                inner,
                { rotate: rotateOffset * inverse, y: "20rem" },
                {
                    duration: 1,
                    rotate: -1.5 * inverse,
                    y: 0,
                    ease: "power2.out",
                },
            ).to(inner, {
                duration: 1,
                rotate: -rotateOffset * inverse,
                y: `-20rem`,
                ease: "power2.in",
            });
            tls.push(tl);
        });
    };

    const cleanup = () => {
        tls.forEach((tl) => {
            tl.kill();
        });
        tls = [];
        items = null;
    };

    document.addEventListener("storyblok-live-preview-updated", () => {
        cleanup();
        init();
    });

    document.addEventListener("astro:page-load", () => {
        init();
    });

    document.addEventListener("astro:before-swap", () => {
        cleanup();
    });
</script>
