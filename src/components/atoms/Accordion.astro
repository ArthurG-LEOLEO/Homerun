---
import { renderRichText, type ISbRichtext } from "@storyblok/astro";
import { Icon } from "astro-icon/components";

const { blok } = Astro.props;
---

<div class="border border-current/40 transition-colors duration-200">
    <button
        class="accordion-button w-full flex justify-between text-left cursor-pointer px-16 py-24 md:px-40 md:py-40"
        aria-expanded="false"
    >
        <div>
            <div class="text-p-22">{blok.title}</div>
        </div>
        <div class="flex-none w-75 flex justify-end">
            <div
                class="flex size-28 shrink-0 items-center justify-center rounded-full border-2 md:size-34"
            >
                <Icon name="arrow-down" class="accordion-icon size-12 md:size-16" />
            </div>
        </div>
    </button>
    <div class="accordion-content h-0 overflow-hidden transition-[height] duration-200 ease-out pr-75">
        <div
            class="px-16 pb-24 md:px-40 md:pb-40"
            set:html={renderRichText(blok.text as ISbRichtext)}
        />
    </div>
</div>

<script>
    const buttons = document.querySelectorAll(".accordion-button");

    buttons.forEach((button) => {
        const content = button.nextElementSibling as HTMLElement;
        const inner = content.querySelector("div") as HTMLElement;
        const accordionContainer = button.parentElement as HTMLElement;

        button.addEventListener("click", () => {
            const isExpanded = button.getAttribute("aria-expanded") === "true";
            const icon = button.querySelector(".accordion-icon") as HTMLElement;

            if (!isExpanded) {
                button.setAttribute("aria-expanded", "true");
                content.style.height = `${inner.offsetHeight}px`;
                if(icon) icon.style.transform = "rotate(180deg)";
                accordionContainer.classList.add("bg-black", "text-white");
                accordionContainer.classList.remove("border-current/40");
                accordionContainer.classList.add("border-black");
            } else {
                button.setAttribute("aria-expanded", "false");
                content.style.height = "0px";
                if(icon) icon.style.transform = "rotate(0deg)";
                accordionContainer.classList.remove("bg-black", "text-white");
                accordionContainer.classList.remove("border-black");
                accordionContainer.classList.add("border-current/40");
            }
        });
    });

    // Handle resize
    let resizeTimeout: ReturnType<typeof setTimeout>;
    window.addEventListener("resize", () => {
        buttons.forEach((button) => {
            const content = button.nextElementSibling as HTMLElement;
            const inner = content.querySelector("div") as HTMLElement;

            if (button.getAttribute("aria-expanded") === "true") {
                content.style.transition = "none";
                content.style.height = `${inner.offsetHeight}px`;

                clearTimeout(resizeTimeout);
                resizeTimeout = setTimeout(() => {
                    content.style.transition = "height 200ms ease-out";
                }, 100);
            }
        });
    });
</script>
