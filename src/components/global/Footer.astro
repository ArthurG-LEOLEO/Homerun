---
import { renderRichText } from "@storyblok/astro";
import { Image } from "astro:assets";

import ArrowLink from "../atoms/ArrowLink.astro";
import BasicLink from "../atoms/BasicLink.astro";
import Title from "../atoms/Title.astro";
import CTA from "./CTA.astro";
import SBImage from "./SBImage.astro";
import { Icon } from "astro-icon/components";

import { useTranslations } from "../../i18n/utils";

const lang = Astro.currentLocale;
const t = useTranslations(lang);

import changeYourHelmetImg from "../../img/change-your-helmet.png";
import footerSplineUrl from "../../spline/footer.splinecode";

interface FooterLink {
    label: string;
    link: {
        cached_url?: string;
        url?: string;
        linktype?: string;
        target?: string;
    };
}

interface FooterColLinks {
    component: "footer_col_links";
    title: string;
    links: FooterLink[];
}

interface FooterText {
    component: "text";
    text: any; // RichText content
}

interface FooterColText {
    component: "footer_col_text";
    title: string;
    texts: FooterText[];
}

type FooterCol = FooterColLinks | FooterColText;

interface FooterImage {
    filename: string;
    alt?: string;
    id: number;
}

interface FooterData {
    title: string[];
    top_link?: FooterLink[];
    copy?: string;
    who_made?: any; // RichText content
    cols?: FooterCol[];
    linkedin?: {
        cached_url?: string;
        url?: string;
        target?: string;
    };
    instagram?: {
        cached_url?: string;
        url?: string;
        target?: string;
    };
    bottom_images?: FooterImage[];
}

const { footerData } = Astro.props;
---

<footer class="border-orange border-b-11 pt-50 pb-10 lg:pt-90">
    <div class="container-main flex flex-col lg:flex-row-reverse">
        <div
            class="lg:px-gutter hidden w-5/12 flex-grow flex-col justify-between gap-25 lg:flex"
        >
            <div class="flex w-full flex-grow justify-end">
                <div
                    class="px-gutter flex size-10/12 max-w-400 items-center justify-center lg:size-full lg:max-w-none lg:flex-grow lg:px-0"
                >
                    <div class="relative aspect-square w-full">
                        <spline-viewer
                            transition:persist="SplineViewer"
                            id="SplineViewer"
                            events-target="global"
                            loading="eager"
                            background="transparent"></spline-viewer>
                        <div
                            class="bg-pink pointer-events-none absolute top-0 right-0 size-84 rounded-full sm:size-122 lg:top-20 lg:right-20"
                        >
                            <Icon
                                name="mouse"
                                class="footer-cursor-click absolute top-26 left-26 size-32 sm:top-37 sm:left-37 sm:size-48"
                            />
                            <Image
                                class="footer-cursor-text absolute top-7 left-7 size-70 sm:top-8 sm:left-8 sm:size-104"
                                width="105"
                                height="105"
                                src={changeYourHelmetImg}
                                alt=""
                                draggable="false"
                            />
                        </div>
                    </div>
                </div>
                <div class="hidden lg:flex lg:flex-col lg:gap-4 lg:self-end">
                    {
                        footerData.linkedin && (
                            <CTA
                                link={footerData.linkedin}
                                icon="linkedin"
                                color="green"
                                aria-label={t("social.linkedin")}
                            />
                        )
                    }
                    {
                        footerData.instagram && (
                            <CTA
                                link={footerData.instagram}
                                icon="instagram"
                                color="blue"
                                aria-label={t("social.instagram")}
                            />
                        )
                    }
                </div>
            </div>
        </div>
        <div class="px-gutter lg:w-7/12 lg:pt-130">
            <div class="flex items-end gap-25">
                <div>
                    <h2 class="text-title-2">
                        <Title title={footerData.title[0]} />
                    </h2>
                    {
                        footerData.top_link && (
                            <ArrowLink
                                label={footerData.top_link[0].label}
                                link={footerData.top_link[0].link}
                                className="mt-24"
                            />
                        )
                    }
                </div>
                <div class="flex flex-none flex-col gap-4 self-end lg:hidden">
                    {
                        footerData.linkedin && (
                            <CTA
                                link={footerData.linkedin}
                                icon="linkedin"
                                color="green"
                                aria-label={t("social.linkedin")}
                            />
                        )
                    }
                    {
                        footerData.instagram && (
                            <CTA
                                link={footerData.instagram}
                                icon="instagram"
                                color="blue"
                                aria-label={t("social.instagram")}
                            />
                        )
                    }
                </div>
            </div>
            {
                footerData.cols && (
                    <div class="mt-90 flex flex-wrap gap-x-64 gap-y-24">
                        {footerData.cols.map((col: FooterCol) => {
                            if (col.component === "footer_col_links") {
                                return (
                                    <div class="footer-col">
                                        <h5 class="text-title-7 mb-8">
                                            {col.title}
                                        </h5>
                                        <div class="flex flex-col">
                                            {col.links?.map(
                                                (linkItem: FooterLink) => (
                                                    <BasicLink
                                                        link={linkItem}
                                                        className="text-p14 text-black/60"
                                                    />
                                                ),
                                            )}
                                        </div>
                                    </div>
                                );
                            } else if (col.component === "footer_col_text") {
                                return (
                                    <div class="footer-col w-full sm:w-auto">
                                        <h5 class="text-title-7 mb-8">
                                            {col.title}
                                        </h5>
                                        <div class="align-start flex gap-20">
                                            {col.texts?.map(
                                                (textItem: FooterText) => (
                                                    <div class="flex-1">
                                                        <div
                                                            class="text-p14 text-black/60"
                                                            set:html={renderRichText(
                                                                textItem.text,
                                                            )}
                                                        />
                                                    </div>
                                                ),
                                            )}
                                        </div>
                                    </div>
                                );
                            }
                            return null;
                        })}
                    </div>
                )
            }
        </div>
    </div>
    <div
        class="container-main mt-30 flex flex-col gap-30 lg:mt-25 lg:flex-row-reverse lg:items-end lg:gap-0"
    >
        <div
            class="pr-gutter flex items-center gap-32 lg:w-5/12 lg:justify-end lg:pl-42"
        >
            {
                footerData.bottom_images?.map((image: FooterImage) => (
                    <SBImage
                        image={image}
                        class="max-h-[4rem] w-auto lg:max-h-[5rem]"
                    />
                ))
            }
        </div>
        <div class="pl-gutter flex items-baseline gap-14 lg:w-7/12 lg:pr-42">
            <p class="text-p14">{footerData.copy}</p>
            {
                footerData.who_made && (
                    <div
                        class="text-p12"
                        set:html={renderRichText(footerData.who_made)}
                    />
                )
            }
        </div>
    </div>
</footer>

<script>
    import "@splinetool/viewer";

    const init = () => {
        const splineViewer: any = document.querySelector("#SplineViewer");
        if (!splineViewer || window.innerWidth < 1024) return;
        splineViewer.url = "/spline/footer.splinecode";
    };

    const cleanup = () => {};

    document.addEventListener("astro:before-swap", () => {
        cleanup();
    });
    document.addEventListener("astro:page-load", () => {
        init();
    });
</script>

<style>
    .footer-cursor-text {
        animation: infiniteRotate linear infinite;
        animation-duration: 20s;
    }

    @keyframes infiniteRotate {
        from {
            transform: rotate(0);
        }
        to {
            transform: rotate(360deg);
        }
    }

    .footer-cursor-click {
        transform-origin: bottom center;
        animation: 5s ease-in-out infinite cursorClick;
    }

    @keyframes cursorClick {
        0% {
            transform: rotate(0);
        }
        95% {
            transform: rotate(0);
        }
        98% {
            transform: rotate(-7deg);
        }
        100% {
            transform: rotate(0);
        }
    }
</style>
