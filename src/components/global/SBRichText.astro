---
import RichTextRenderer from "storyblok-rich-text-astro-renderer/RichTextRenderer.astro";
import { storyblokEditable } from "@storyblok/astro";
import LayeredImage from "./LayeredImage.astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import Table from "../wysiwyg/Table.astro";

interface Props {
    content: any;
    blok?: any;
}

const { content, blok } = Astro.props;
---

<RichTextRenderer
    content={content}
    schema={{
        nodes: {
            image: ({ attrs }) => ({
                component: LayeredImage,
                props: {
                    image: {
                        id: attrs.id,
                        filename: attrs.src,
                        alt: attrs.alt,
                    },
                    class: "my-[5.6rem] w-[calc(14/12*100%+2rem)] -ml-[calc(1/12*100%+1rem)] max-w-none lg:my-[7.2rem] lg:w-[calc(100%+4rem)] lg:-ml-[2rem] last:mb-0",
                },
            }),
            paragraph: () => ({
                component: "p",
                props: {
                    class: "text-p-24 my-[1em] last:mb-0",
                },
            }),
            heading: ({ attrs }) => {
                const level = attrs.level;
                switch(level) {
                    case 2:
                        return {
                            component: "h2",
                            props: {
                                class: "text-title-2 my-[4.8rem] lg:my-[5.6rem] last:mb-0",
                            },
                        };
                    case 3:
                        return {
                            component: "h3",
                            props: {
                                class: "text-title-3 my-[4.8rem] lg:my-[5.6rem] last:mb-0",
                            },
                        };
                    case 4:
                        return {
                            component: "h4",
                            props: {
                                class: "text-title-4 my-[4.8rem] lg:my-[5.6rem] last:mb-0",
                            },
                        };
                    default:
                        return {
                            component: "h3",
                            props: {
                                class: "text-title-3 my-[4.8rem] lg:my-[5.6rem] last:mb-0",
                            },
                        };
                }
            },
            table: () => ({
                component: Table,
            }),
            bullet_list: () => ({
                component: "ul",
                props: {
                    class: "list-disc text-p-24 my-[1em] last:mb-0",
                },
            }),
        },
        marks: {
            link: ({ attrs }) => ({
                component: "a",
                props: {
                    href: attrs.href,
                    target: attrs.target,
                    class: "underline",
                },
            }),
        },
    }}
    resolver={(blok) => {
        return {
            component: StoryblokComponent,
            props: { blok },
        };
    }}
    {...storyblokEditable(blok)}
/>
