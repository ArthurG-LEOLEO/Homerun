---
import { Icon } from "astro-icon/components";
import { useTranslations } from "../../i18n/utils";

const lang = Astro.currentLocale;
const t = useTranslations(lang);
---

<div
    id="layout-banner"
    class="absolute top-0 right-0 left-0 z-[101] h-30 translate-y-[-100%]"
>
    <div
        id="banner-button"
        class="bg-pink flex size-full cursor-pointer items-center justify-end overflow-hidden text-[1.3rem]/[1.8rem] font-medium uppercase"
    >
        <div
            class="banner-slide flex h-full shrink-0 items-center gap-56 pl-56"
        >
            {
                [...Array(8)].map(() => (
                    <div class="flex shrink-0 items-center gap-8">
                        <span>{t("banner.title")}</span>
                        <Icon
                            name="plus"
                            class="relative top-[-0.1rem] size-16"
                        />
                    </div>
                ))
            }
        </div>
        <div
            class="banner-slide flex h-full shrink-0 items-center gap-56 pl-56"
        >
            {
                [...Array(8)].map(() => (
                    <div class="flex shrink-0 items-center gap-8">
                        <span>{t("banner.title")}</span>
                        <Icon
                            name="plus"
                            class="relative top-[-0.1rem] size-16"
                        />
                    </div>
                ))
            }
        </div>
    </div>
    <div
        id="banner-popup"
        class="bg-blue invisible absolute top-50 left-[50%] w-[calc(100%-20px)] max-w-750 origin-top translate-x-[-50%] scale-x-[0.95] scale-y-[0.7] p-25 opacity-0 md:p-50"
    >
        <button
            id="banner-close-button"
            class="absolute top-16 right-16 cursor-pointer md:top-24 md:right-24 md:size-34"
        >
            <Icon name="cross-circle" class="size-28 md:size-34" />
        </button>
        <div class="flex w-full flex-col">
            <h3 class="text-title-3">{t("banner.title")}</h3>
            <div class="mt-20 aspect-video w-full">
                <iframe
                    src="https://www.youtube.com/embed/w4IH1b2tS8I?si=xqLtCMFn9n_qkd_T"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                    class="h-full w-full"></iframe>
            </div>
            <a
                class="font-space mt-22 text-[1.8rem]/[2.3rem] font-medium underline underline-offset-5"
                href="google.com"
                target="_blank">{t("banner.moreLink")}</a
            >
        </div>
    </div>
</div>

<style>
    .banner-slide {
        animation: infiniteSlide linear infinite;
        --speed: 80s;
        animation-duration: var(--speed);
    }

    @keyframes infiniteSlide {
        from {
            transform: translateX(0);
        }
        to {
            transform: translateX(100%);
        }
    }
</style>

<script>
    let isOpen = false;

    let tlOpen: gsap.core.Timeline;
    let tlClose: gsap.core.Timeline;
    let banner: HTMLElement | null;
    let bannerPopup: HTMLElement | null;
    let buttonClose: HTMLElement | null;

    const openPopup = () => {
        if (isOpen) return;
        tlClose?.kill();
        tlOpen = gsap
            .timeline()
            .to(bannerPopup, {
                autoAlpha: 1,
                duration: 0.3,
                ease: "power3",
            })
            .to(
                bannerPopup,
                {
                    scaleY: 1,
                    scaleX: 1,
                    duration: 0.6,
                    ease: "elastic(1.2, 0.7)",
                },
                "<",
            );
        isOpen = true;
    };

    const closePopup = () => {
        if (!isOpen) return;
        tlOpen?.kill();
        tlClose = gsap.timeline().to(bannerPopup, {
            scaleY: 0.7,
            scaleX: 0.95,
            autoAlpha: 0,
            duration: 0.1,
            ease: "power3",
        });
        isOpen = false;
    };

    const init = () => {
        banner = document.querySelector("#banner-button");
        bannerPopup = document.querySelector("#banner-popup");

        if (!banner || !bannerPopup) return;

        buttonClose = document.querySelector("#banner-close-button");

        banner?.addEventListener("click", openPopup);
        buttonClose?.addEventListener("click", closePopup);
    };

    const cleanup = () => {
        banner?.removeEventListener("click", openPopup);
        buttonClose?.removeEventListener("click", closePopup);
    };

    document.addEventListener("astro:before-swap", () => {
        cleanup();
    });
    document.addEventListener("astro:page-load", () => {
        init();
    });
</script>
