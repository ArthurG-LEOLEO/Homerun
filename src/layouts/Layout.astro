---
import { useStoryblokApi } from "@storyblok/astro";

import "@fontsource-variable/figtree";
import "@fontsource-variable/space-grotesk";

import "../styles/global.css";

import "lenis/dist/lenis.css";
import { ClientRouter } from "astro:transitions";

import Grid from "../components/global/Grid.astro";
import Header from "../components/global/Header.astro";
import Banner from "../components/global/Banner.astro";
import Footer from "../components/global/Footer.astro";
import Loader from "../components/global/Loader.astro";

const isDev = import.meta.env.DEV;
const storyblokApi = useStoryblokApi();
const {
    language,
    headerLogoless = false,
    headerWhite = false,
    alternates,
} = Astro.props;

const { data } = await storyblokApi.get(`cdn/stories/${language}/_global`, {
    version: "draft",
});

const footerData = data.story.content.Footer[0];
const headerData = data.story.content.menu[0];
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>Astro Basics</title>
        <ClientRouter />
    </head>
    <body>
        <Banner />
        <Header
            blok={headerData}
            logoless={headerLogoless}
            white={headerWhite}
            alternates={alternates}
        />
        <slot />
        <Footer footerData={footerData} />
        <Loader />
        {isDev && <Grid />}
    </body>
</html>

<script>
    import { gsap } from "gsap";
    import ScrollTrigger from "gsap/ScrollTrigger";
    import Observer from "gsap/Observer";
    import Lenis from "lenis";

    gsap.registerPlugin(ScrollTrigger);
    gsap.registerPlugin(Observer);

    // Initialize a new Lenis instance for smooth scrolling
    const lenis = new Lenis();

    // Synchronize Lenis scrolling with GSAP's ScrollTrigger plugin
    lenis.on("scroll", ScrollTrigger.update);

    // Add Lenis's requestAnimationFrame (raf) method to GSAP's ticker
    // This ensures Lenis's smooth scroll animation updates on each GSAP tick
    gsap.ticker.add((time) => {
        lenis.raf(time * 1000); // Convert time from seconds to milliseconds
    });

    // Disable lag smoothing in GSAP to prevent any delay in scroll animations
    gsap.ticker.lagSmoothing(0);

    window.gsap = gsap;
    window.lenis = lenis;
    window.Observer = Observer;
    document.addEventListener("astro:page-load", (event) => {
        window.scrollTo(0, 0);
    });
</script>
